BUG per Alex Shinn: "Chibi tracks fd's with a weak hash table
internally, which your low-level wrappers are bypassing."  He's going
to meld that part of SRFI 170 with (chibi filesystem) "e.g. reusing
the same file-info record from stat so that the two libraries can
interoperate."  So we can wait on him or whomever to fix that.

Needed to match the SRFI:

The optional buffer-mode argument to fdes->[textual|binary]-[input|output]-port

Finishing call-with-temporary-filename


Needed for correctness, not production quality without this:

errno manipulation needs to be done at the C level, for Chibi Scheme
might set errno between any of 1) manually setting errno, 2) a POSIX
call possibly setting it, and 3) retrieving its value.  See the SRFI
199 discussion for more details: https://srfi-email.schemers.org/srfi-199/

The functionality of retry-if-EINTR in common.scm needs to be done at
the C level, for Chibi Scheme might set errno between the retry of the
POSIX call and retrieving its value.  See the SRFI 199 discussion for
more details: https://srfi-email.schemers.org/srfi-199/


Suggested enhancements:

Leverage the existing fileno object for File Descriptor Objects
(FDOs).  They're pretty much everything FDOs need, including
closing the fd finalization on GC.

Make appropriate procedures thread safe or thread aware

Improve temp-file-prefix specification and perhaps implementation

Use [...]at functions to handle long file paths.

See (chibi io) for how to write a C function then wrap it in a stub

WRT to above, in general, a great deal of cleanup can be done, this
project was my (hga's) reintrodution to using Scheme in anger after
many decades, and my introduction to Chibi Scheme and its extremely
nifty autogenerating FFI (170.stub) and raw FFI (aux.c).
